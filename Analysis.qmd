---
title: "Analysis"
author: "Aaditya Warrier"
format: html
editor: visual
---

# Setup

```{r}
library(foreign)
library(tidyverse)
library(sf)
library(stringr)
library(dukestm)

# splancs is a dependency for seg
# install.packages("splancs")
# install.packages('seg_0.5-7.tar.gz', repos=NULL, type='source')


library(seg)

shurg_shp <- st_read("../final project data/shrug-shrid-poly-shp/shrid2_open.shp")
shurg_pca <- read_csv("../final project data/shrug-pca11-csv/pc11_pca_clean_shrid.csv")

shurg_pca_dist <- read_csv("../final project data/shrug-pca11-csv/pc11_pca_clean_pc11dist.csv")

shurg_pca_subdist <- read_csv("../final project data/shrug-pca11-csv/pc11_pca_clean_pc11subdist.csv")


shrug_subdist_shp <- st_read("../final project data/shrug-pc11subdist-poly-shp/subdistrict.shp")

shrug_dist_shp <- st_read("../final project data/shrug-pc11dist-poly-shp/district.shp")



shrug_secc <- read_csv("../shrug-secc/secc_urban_shrid.csv")

shrug_secc_rural <- read_csv("../shrug-secc-rural/secc_rural_shrid.csv")

shrug_secc_dist_urban <- read_csv("../shrug-secc/secc_urban_pc11subdist.csv")

shrug_ec_shrid <- read_csv("../shrug-ec/ec13_shrid.csv")


shrug_ec_dist <- read_csv("../shrug-ec/ec13_pc11dist.csv")

shrug_ec_subdist <- read_csv("../shrug-ec/ec13_pc11subdist.csv")



```

# Data Cleaning

## Make pca shrids

```{r}
shurg_shp <- st_make_valid(shurg_shp)

mumbai_shp <- shrug_dist_shp |>
  filter(str_detect(d_name, "Mumbai"))


mmr_shp <- shrug_subdist_shp |>
  filter(pc11_s_id == "27" &
           pc11_d_id %in% c(517, 520)) |>
  filter(sd_name %in% c("Kalyan", "Bhiwandi", "Ulhasnagar", "Thane", "Panvel", "Vasai", "Virar", "Ambarnath", "Badlapur", "Karjat", "Khopoli", 
                        "Uran", "Pen", "Alibag", "Dombivili")) |>
  rename(d_name = sd_name) 

full_mmr_shp <- st_make_valid(rbind(mumbai_shp, mmr_shp |>
  select(-pc11_sd_id)))

ints <- full_mmr_shp |>
  st_intersects(shurg_shp)


mmr_shrid <- shurg_shp[unique(as.numeric(unlist(ints[3:13]))), ] |>
  left_join(shurg_sec, by = "shrid2") |>
  mutate(pc11_pca_p_sc = as.numeric(pc11_pca_p_sc),
         pc11_pca_tot_p = as.numeric(pc11_pca_tot_p),
         pc11_pca_p_st = as.numeric(pc11_pca_p_st)
         ) 

mum_dists <- shrug_dist_shp |>
  filter(d_name %in% c("Mumbai", "Mumbai Suburban")) |>
  inner_join(shurg_pca_dist |>
               rename(pc11_d_id = pc11_district_id), by = "pc11_d_id") 


mmr_shrid <- mmr_shrid |>
  filter(shrid2 != "11-27-518-99999-802794") |>
  plyr::rbind.fill(mum_dists) |>
  st_as_sf()


write_rds(mmr_shrid, "data/cleaned/mmr_shrid.rds")


mmr_shrid_2 <- mmr_shrid |>
  filter(!is.na(shrid2))

write_rds(mmr_shrid_2, "data/cleaned/mmr_shrid_2.rds")

```

## Make pca subdist

```{r}
mmr_subdist <- mmr_shp |>
  inner_join(shurg_pca_subdist |>
               rename(pc11_sd_id = pc11_subdistrict_id), by = "pc11_sd_id")
mmr_subdist <- plyr::rbind.fill(mmr_subdist,
                                mum_dists) |>
  select(-pc11_district_id) |>
  st_as_sf()

ggplot() + 
  geom_sf(data = mmr_subdist, aes(fill = (pc11_pca_p_sc + pc11_pca_p_st) / 
                                  pc11_pca_tot_p)) +
  scale_fill_viridis_c()

write_rds(mmr_subdist, "data/cleaned/mmr_subdist.rds")

```

## make other shrid

```{r }
rural_shrid <- shrug_secc_rural |>
  inner_join(mmr_shrid, by = "shrid2") |>
  distinct(shrid2, .keep_all = TRUE) |>
  st_as_sf()

urban_shrid <- shrug_secc |>
  inner_join(mmr_shrid, by = "shrid2") |>
  distinct(shrid2, .keep_all = TRUE) |>
  st_as_sf()

combined_shrid <- plyr::rbind.fill(rural_shrid, urban_shrid) |>
  st_as_sf()

write_rds(combined_shrid, "data/cleaned/secc_shrid.rds")


mum_dists_all <- mum_dists |>
  inner_join(shrug_ec_dist |>
               rename(pc11_d_id = pc11_district_id), by = "pc11_d_id") |>
  inner_join(shrug_secc_dist_urban |>
               rename(pc11_d_id = pc11_district_id), by = "pc11_d_id")



ec_shrid_mmr <- shrug_ec_shrid |>
  inner_join(mmr_shrid, by = "shrid2") |>
  plyr::rbind.fill(mum_dists) |>
  st_as_sf()

ggplot() + 
  geom_sf(data = ec_shrid_mmr, aes(fill = ec13_count_st/ec13_count_all)) +
  scale_fill_viridis_c()

ggplot() + 
  geom_sf(data = ec_shrid_mmr, aes(fill = ec13_count_obc/ec13_count_all)) +
  scale_fill_viridis_c()


write_rds(ec_shrid_mmr, "data/cleaned/all_surveys_mmr_shrid.rds")


unincluded <- mmr_shrid[!(mmr_shrid$shrid2 %in% ec_shrid_mmr$shrid2), ]
write_rds(unincluded, "data/cleaned/missing_from_all_shrid.rds")



shrug_ec_shrid |>
   summarize(sc_pop = (sum(ec13_count_sc) / sum(ec13_count_all))* 100,
            st_pop = (sum(ec13_count_st) / sum(ec13_count_all)) *100,
            obc_pop = (sum(ec13_count_obc) / sum(ec13_count_all)) * 100)

shurg_pca_subdist |>
  filter(pc11_state_id == "27") |>
   summarize(sc_pop = (sum(pc11_pca_p_sc) / sum(pc11_pca_tot_p))* 100,
            st_pop = (sum(pc11_pca_p_st) / sum(pc11_pca_tot_p)) *100, 
            total = sc_pop + st_pop)
```

## make other subdist

```{r}
ec_subdist_mmr <- mmr_subdist |>
  inner_join(shrug_ec_subdist |>
               rename(pc11_sd_id = pc11_subdistrict_id), by = "pc11_sd_id") |>
  plyr::rbind.fill(mum_dists_all) |>
  st_as_sf()


secc_subdist_mmr <- mmr_subdist |>
  inner_join(shrug_secc_dist_urban |>
               rename(pc11_sd_id = pc11_subdistrict_id), by = "pc11_sd_id") |>
  plyr::rbind.fill(mum_dists_all) |>
  st_as_sf()

write_rds(ec_subdist_mmr,"data/cleaned/ec_subdist_mmr.rds")
write_rds(secc_subdist_mmr,"data/cleaned/secc_subdist_mmr.rds")

ggplot() + 
  geom_sf(data = ec_subdist_mmr, aes(fill = ec13_count_st/ec13_count_all)) +
  scale_fill_viridis_c()

```

# Actual Analysis

## Geary's/Morans

```{r}
A = spdep::mat2listw(st_touches(mmr_shrid_2, sparse=FALSE), zero.policy = TRUE)

spdep::moran.test((mmr_shrid_2$pc11_pca_p_sc + mmr_shrid_2$pc11_pca_p_st) / 
                                  mmr_shrid_2$pc11_pca_tot_p, A)

ggplot(mmr_shrid_2, aes(x = sqrt((pc11_pca_p_sc + pc11_pca_p_st) / 
                                  pc11_pca_tot_p))) +
  geom_histogram()
```

## Seg Indices

```{r seg indices}
# calculating segregation indices below
x <- sf::as_Spatial(st_geometry(mmr_shrid))


### caste at shrid level

df <- tibble(sc_pop = mmr_shrid$pc11_pca_p_sc, 
                 other_pop = mmr_shrid$pc11_pca_tot_p - sc_pop)

seg::spseg(x, df, smoothing = "kernel", sigma = 0.03)

seg::dissim(x, df, adjust = TRUE, verbose = TRUE, n2m.args = list(zero.policy = TRUE))


### caste at subdist level

x <- as_Spatial(st_geometry(mmr_subdist))


df <- tibble(sc_pop = mmr_subdist$pc11_pca_p_st, other_pop = mmr_subdist$pc11_pca_tot_p - (sc_pop))

seg::dissim(x, df, adjust = TRUE)

seg::spseg(x, df, smoothing = "kernel", sigma = 0.03)


### firm ownership at subdist level



x <- as_Spatial(st_geometry(ec_subdist_mmr))


# OBC 
df <- tibble(obc_pop = ec_subdist_mmr$ec13_count_obc,
             other_pop = ec_subdist_mmr$ec13_count_all - (obc_pop))

dissim(x, df)


# SC/ST 
df <- tibble(sc_pop = ec_subdist_mmr$ec13_count_sc +  ec_subdist_mmr$ec13_count_st,
             other_pop = ec_subdist_mmr$ec13_count_all - (sc_pop))

dissim(x, df)

### firm ownership at shrid level


x <- as_Spatial(st_geometry(ec_shrid_mmr))

# OBC 
df <- tibble(obc_pop = ec_shrid_mmr$ec13_count_obc,
             other_pop = ec_shrid_mmr$ec13_count_all - (obc_pop))

dissim(x, df)


# SC/ST 
df <- tibble(sc_pop = ec_shrid_mmr$ec13_count_sc +  ec_shrid_mmr$ec13_count_st,
             other_pop = ec_shrid_mmr$ec13_count_all - (sc_pop))

dissim(x, df)





```

```{r}

x <- sf::as_Spatial(st_geometry(mmr_shrid))

df <- tibble(sc_pop = mmr_shrid$pc11_pca_p_st, 
                 other_pop = mmr_shrid$pc11_pca_tot_p - sc_pop)

reard_st_prim <- as.list(seg::spseg(x, df, smoothing = "kernel"))

write_rds(reard_st_prim, "reard_st.rds")

df <- tibble(sc_pop = mmr_shrid_2$pc11_pca_p_sc, 
                 other_pop = mmr_shrid_2$pc11_pca_tot_p - sc_pop)
reard_sc_prim <- as.list(seg::spseg(x, df, smoothing = "kernel"))

write_rds(reard_sc_prim, "reard_sc.rds")


x <- sf::as_Spatial(st_geometry(ec_shrid_mmr))

df <- tibble(sc_pop = ec_shrid_mmr$ec13_count_obc, 
                 other_pop = ec_shrid_mmr$ec13_count_all - sc_pop)

reard_obc <- as.list(seg::spseg(x, df, smoothing = "kernel"))

write_rds(reard_obc, "reard_obc.rds")


df <- tibble(sc_pop = ec_shrid_mmr$ec13_count_sc + ec_shrid_mmr$ec13_count_st, 
                 other_pop = ec_shrid_mmr$ec13_count_all - sc_pop)

reard_comb <- as.list(seg::spseg(x, df, smoothing = "kernel"))

write_rds(reard_comb, "reard_comb.rds")

```

```{r }
# reard measures sec


x <- sf::as_Spatial(st_geometry(mmr_subdist))

df <- tibble(sc_pop = mmr_subdist$pc11_pca_p_st, 
                 other_pop = mmr_subdist$pc11_pca_tot_p - sc_pop)

reard_st <- as.list(seg::spseg(x, df, smoothing = "kernel"))

write_rds(reard_st, "reard/reard_st_sec.rds")

df <- tibble(sc_pop = mmr_subdist$pc11_pca_p_sc, 
                 other_pop = mmr_subdist$pc11_pca_tot_p - sc_pop)
reard_sc <- as.list(seg::spseg(x, df, smoothing = "kernel"))

write_rds(reard_sc, "reard/reard_sc_sec.rds")

ec_subdist_mmr <- read_rds("data/cleaned/ec_subdist_mmr.rds")




x <- sf::as_Spatial(st_geometry(ec_subdist_mmr))

df <- tibble(sc_pop = ec_subdist_mmr$ec13_count_obc, 
                 other_pop = ec_subdist_mmr$ec13_count_all - sc_pop)

reard_obc <- as.list(seg::spseg(x, df, smoothing = "kernel"))

write_rds(reard_obc, "reard/reard_obc_sec.rds")


df <- tibble(sc_pop = ec_subdist_mmr$ec13_count_sc + ec_subdist_mmr$ec13_count_st, 
                 other_pop = ec_subdist_mmr$ec13_count_all - sc_pop)

reard_comb <- as.list(seg::spseg(x, df, smoothing = "kernel"))

write_rds(reard_comb, "reard/reard_comb_sec.rds")

```


```{r}
x <- sf::as_Spatial(mmr_subdist)

df <- tibble(sc_pop = mmr_subdist$pc11_pca_p_st, 
                 other_pop = mmr_subdist$pc11_pca_tot_p - sc_pop)

xtest <- OasisR::ResampleTest(df, fun ='ISMorrill', simtype = 'MonteCarlo', 
                       sampleunit = 'unit', spatobj = x)

mor_test_st_sub <- xtest$Summary[1, ]
OasisR::ResamplePlot(xtest)
```

```{r}
df <- tibble(sc_pop = mmr_subdist$pc11_pca_p_sc, 
                 other_pop = mmr_subdist$pc11_pca_tot_p - sc_pop)

xtest <- OasisR::ResampleTest(df, fun ='ISMorrill', simtype = 'MonteCarlo', 
                       sampleunit = 'unit', spatobj = x)

mor_test_sc_sub <- xtest$Summary[1, ]

OasisR::ResamplePlot(xtest)
```

```{r}
x <- sf::as_Spatial(mmr_shrid)


df <- tibble(sc_pop = mmr_shrid$pc11_pca_p_sc, 
                 other_pop = mmr_shrid$pc11_pca_tot_p - sc_pop)

xtest <- OasisR::ResampleTest(df, fun ='ISMorrill', simtype = 'MonteCarlo', 
                       sampleunit = 'unit', spatobj = x)

mor_test_sc <- xtest$Summary[1, ]


OasisR::ResamplePlot(xtest)
```

```{r}
df <- tibble(sc_pop = mmr_shrid$pc11_pca_p_st, 
                 other_pop = mmr_shrid$pc11_pca_tot_p - sc_pop)

xtest <- OasisR::ResampleTest(df, fun ='ISMorrill', simtype = 'MonteCarlo', 
                       sampleunit = 'unit', spatobj = x)


mor_test_sc <- xtest$Summary[1, ]
```


```{r}
df <- tibble(sc_pop = mmr_shrid$pc11_pca_p_st, 
                 other_pop = mmr_shrid$pc11_pca_tot_p - sc_pop)

xtest <- OasisR::ResampleTest(df, fun ='multispatseg', simtype = 'MonteCarlo', 
                       sampleunit = 'unit', spatobj = x)


reard_test_st <- xtest$Summary[1, ]
```


